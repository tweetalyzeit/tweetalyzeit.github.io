let resp = [];
let timestamps = [];
let units = [];

let chart_type = "bar";
let chart_title = "Likes";
let line_mode = "lines";
let line_shape = "linear";
let x_axis_data = [];
let x_axis_label = "Time";
let y_axis_data = [];
let y_axis_label = "Likes";

function generateFunction(){
    const Url='https://tweetgettimestamps.herokuapp.com/?pw=newSreel' + '&user=' + $('#user').val() + '&replies=1&search=';
    $.ajax({
        url: Url,
        type:"GET",
        beforeSend: function(){
            console.log(Url)
            $('#submitHandle').attr("disabled",true);
            $('#submitHandle').html("Sampling..");  
        },
        success: function(responseText){
            console.log(responseText)
            resp = responseText;

            var d = new Date();
            d.setTime(Date.now());
            var d2 = d.toUTCString();
            $('#SentNumbers').html("Generated by Tweetalyze<br>" + d2 + "<br>Username: " + resp.name + "  |  Sample Size: " + resp.sampleSize); 
            
            units = [];
            for(var i = 0; i < responseText.sampleSize; i++){
                units.push(i);
            }
            timestamps = resp.dates.reverse();
            
            x_axis_data = timestamps;
            y_axis_data = resp.trend_likes;
            //chart_title = "Likes";
            x_axis_label = "Time";
            y_axis_label = "Likes";

            trendTheData();
            $('#submitHandle').html("Done!");
            $('#submitHandle').attr("disabled",false);
            $('#submitHandle').html("Sample");  
        },
        error:function(error){
            console.log("Error")
            $('#submitHandle').html("Oops!");
        }
    })
}


function setChartType(type){
    chart_type = type;
    if(chart_type == "line"){
        document.getElementById('LineSettings').style.display = 'block';
        document.getElementById('BellCurveSwitch').style.display = 'none';
    }
    else if (chart_type == "histogram"){
        document.getElementById('LineSettings').style.display = 'none';
        document.getElementById('Line_LineSettings').style.display = 'none';
        document.getElementById('BellCurveSwitch').style.display = 'block';
    }
    else{
        document.getElementById('LineSettings').style.display = 'none';
        document.getElementById('Line_LineSettings').style.display = 'none';
        document.getElementById('BellCurveSwitch').style.display = 'none';
    }
    trendTheData();
}
function setLineMode(mode){
    line_mode = mode;
    if(line_mode == "lines" || line_mode == "lines+markers"){
        document.getElementById('Line_LineSettings').style.display = 'block';
    }
    else{
        document.getElementById('Line_LineSettings').style.display = 'none';
    }
    trendTheData();
}
function setLineShape(shape){
    line_shape = shape;
    trendTheData();
}
function setXData(metric){
    switch(metric){
        case "Time": x_axis_data = timestamps; x_axis_label = "Time"; break;
        case "Unitless": x_axis_data = units; x_axis_label = "Sample #"; break;
        case "Likes": x_axis_data = resp.trend_likes; x_axis_label = "Likes"; break;
        case "Retweets": x_axis_data = resp.trend_retweets; x_axis_label = "Retweets"; break;
        case "Length": x_axis_data = resp.trend_length; x_axis_label = "Length (char)"; break;
        case "Sentiment": x_axis_data = resp.trend_sentiment_score; x_axis_label = "Sentiment"; break;
        default: x_axis_data = timestamps; break;
    }
    trendTheData();
}
function setYData(metric){
    switch(metric){
        case "Likes": y_axis_data = resp.trend_likes; break;
        case "Retweets": y_axis_data = resp.trend_retweets; break;
        case "Length": y_axis_data = resp.trend_length; break;
        case "Sentiment": y_axis_data = resp.trend_sentiment_score; break;
        default: y_axis_data = resp.trend_likes; break;
    }
    //chart_title = metric;
    y_axis_label = metric;
    trendTheData();
}

function trendTheData() {
    //graph the trends
    $("#TrendLine").html('');

    if(chart_type != "histogram"){
        var trace1 = {
            type: chart_type,
            x: x_axis_data,
            y: y_axis_data,
            //name: "Sentiment Score",
            mode: line_mode,
            line: {
                color: 'rgb(29, 161, 242)',
                shape: line_shape,
                //dash: 'dash',
            }
        };
        chart_title = y_axis_label;
        var dataTrend = [trace1];
    }
    else{ // special settings for histograms
        
        if(document.getElementById('bellCurveSwitch1').checked == true){
            var temp_curve_xaxis = [];
            var temp_curve_yaxis = [];
            var temp_curve_std = math.std(x_axis_data);
            var temp_curve_mean = math.mean(x_axis_data);
            
            var lowX = Math.min(...x_axis_data);
            var highX = Math.max(...x_axis_data);
            var term1 = 1/(temp_curve_std*Math.sqrt(2*Math.PI));
            for(j = lowX; j <= highX; j++){
                temp_curve_xaxis.push(j);
                var term2 = (j-temp_curve_mean)/temp_curve_std;
                var term3 = Math.pow(term2,2);
                var term4 = -0.5*term3;
                var term5 = term1 * Math.pow(Math.E, term4);
                temp_curve_yaxis.push(term5);
            }
            var trace1 = {
                type: chart_type,
                x: x_axis_data,
                histnorm: "probability density",
            };
            var trace2 = {
                type: "line",
                x: temp_curve_xaxis,
                y: temp_curve_yaxis,
                line: {
                    shape: "spline",
                }
            };
            var dataTrend = [trace1, trace2];
        }
        else{
            var trace1 = {
                type: chart_type,
                x: x_axis_data,
            };
            var dataTrend = [trace1];
        }

        chart_title = x_axis_label;
    }

    var configTrend = {
        modeBarButtonsToRemove: ['zoom2d', 'pan2d', 'select2d', 'lasso2d', 'zoomIn2d', 'zoomOut2d', 'resetScale2d', 'hoverClosestGl2d', 'hoverClosestPie','toggleHover', 'resetViews', 'sendDataToCloud', 'toggleSpikelines', 'resetViewMapbox','hoverClosestCartesian', 'hoverCompareCartesian'], 
        displaylogo: false,
        responsive: true
    };
    var layoutTrend = {
        title: {
            text:chart_title,
            font: {
              family: 'Lato',
              size: 24
            },
            xanchor: "right",
            xref: "paper",
            yanchor: "middle",
            yref: "paper",
            x: 1,
            y: 1.01,
        },
        yaxis: {
            
        },
        xaxis: {
            //showticklabels: false,
            zeroline: false,
            showline: false,
            title: {
                text: x_axis_label,
                /*font: {
                  family: 'Courier New, monospace',
                  size: 18,
                  color: '#7f7f7f'
                }*/
            },
        },
        showlegend: false, // TEMPORARILY HIDING THE LEGEND. MAKE THIS DYNAMIC LATER
        legend: {
            "orientation": "v",
            x: 0.5,
            y: 1.27
        },
        images: [
            {
              x: 0,
              y: 1.1,
              sizex: 0.2,
              sizey: 0.2,
              source: resp.profilePicURL,
              xanchor: "middle",
              xref: "paper",
              yanchor: "bottom",
              yref: "paper"
            }
          ]
    };

    Plotly.newPlot("TrendLine", dataTrend, layoutTrend, configTrend);
}